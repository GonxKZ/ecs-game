name: Performance Gates CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  performance-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Run performance tests
      run: npm run test:performance

    - name: Generate performance report
      run: npm run report:performance

    - name: Upload performance artifacts
      uses: actions/upload-artifact@v3
      with:
        name: performance-report
        path: |
          performance-report.json
          benchmark-results.json

    - name: Check performance gates
      run: |
        node scripts/check-performance-gates.js

    - name: Comment performance results
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const report = JSON.parse(fs.readFileSync('performance-report.json', 'utf8'));

          const comment = `
          ## 🚀 Performance Report

          ### 📊 Overall Score: ${report.performanceScore}/100

          ### ⚡ Frame Time Performance
          - Average: ${report.frameTime.avg.toFixed(2)}ms
          - P95: ${report.frameTime.p95.toFixed(2)}ms
          - P99: ${report.frameTime.p99.toFixed(2)}ms

          ### 🧠 Memory Usage
          - Peak: ${(report.memoryUsage.peak / 1024 / 1024).toFixed(2)}MB
          - Average: ${(report.memoryUsage.avg / 1024 / 1024).toFixed(2)}MB
          - Growth: ${(report.memoryUsage.growth / 1024).toFixed(1)}KB

          ### 🔍 Query Performance
          - Average: ${report.queries.avg.toFixed(3)}ms
          - Slowest: ${report.queries.slowest.name} (${report.queries.slowest.time.toFixed(3)}ms)

          ### ⚙️ System Performance
          - Average: ${report.systems.avg.toFixed(3)}ms
          - Slowest: ${report.systems.slowest.name} (${report.systems.slowest.time.toFixed(3)}ms)

          ### 🚨 Issues Found: ${report.issues.critical.length + report.issues.warnings.length}
          ${report.issues.critical.length > 0 ? '### ❌ Critical Issues\n' + report.issues.critical.map(i => `- ${i}`).join('\n') : ''}
          ${report.issues.warnings.length > 0 ? '### ⚠️ Warnings\n' + report.issues.warnings.map(w => `- ${w}`).join('\n') : ''}

          ### 💡 Recommendations
          ${report.recommendations.map(r => `- ${r}`).join('\n')}
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  accessibility-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run accessibility tests
      run: npm run test:accessibility

    - name: Run i18n validation
      run: npm run validate:i18n

  pwa-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build PWA
      run: npm run build:pwa

    - name: Test PWA features
      run: npm run test:pwa

  unit-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm run test:unit

    - name: Generate coverage report
      run: npm run coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: true

  property-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run property-based tests
      run: npm run test:property

    - name: Generate property test report
      run: npm run report:property
